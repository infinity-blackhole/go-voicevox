/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the UpdateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInfo{}

// UpdateInfo エンジンのアップデート情報
type UpdateInfo struct {
	Version      string   `json:"version"`
	Descriptions []string `json:"descriptions"`
	Contributors []string `json:"contributors,omitempty"`
}

// NewUpdateInfo instantiates a new UpdateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInfo(version string, descriptions []string) *UpdateInfo {
	this := UpdateInfo{}
	this.Version = version
	this.Descriptions = descriptions
	return &this
}

// NewUpdateInfoWithDefaults instantiates a new UpdateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInfoWithDefaults() *UpdateInfo {
	this := UpdateInfo{}
	return &this
}

// GetVersion returns the Version field value
func (o *UpdateInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *UpdateInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *UpdateInfo) SetVersion(v string) {
	o.Version = v
}

// GetDescriptions returns the Descriptions field value
func (o *UpdateInfo) GetDescriptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value
// and a boolean to check if the value has been set.
func (o *UpdateInfo) GetDescriptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Descriptions, true
}

// SetDescriptions sets field value
func (o *UpdateInfo) SetDescriptions(v []string) {
	o.Descriptions = v
}

// GetContributors returns the Contributors field value if set, zero value otherwise.
func (o *UpdateInfo) GetContributors() []string {
	if o == nil || IsNil(o.Contributors) {
		var ret []string
		return ret
	}
	return o.Contributors
}

// GetContributorsOk returns a tuple with the Contributors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfo) GetContributorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Contributors) {
		return nil, false
	}
	return o.Contributors, true
}

// HasContributors returns a boolean if a field has been set.
func (o *UpdateInfo) HasContributors() bool {
	if o != nil && !IsNil(o.Contributors) {
		return true
	}

	return false
}

// SetContributors gets a reference to the given []string and assigns it to the Contributors field.
func (o *UpdateInfo) SetContributors(v []string) {
	o.Contributors = v
}

func (o UpdateInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["descriptions"] = o.Descriptions
	if !IsNil(o.Contributors) {
		toSerialize["contributors"] = o.Contributors
	}
	return toSerialize, nil
}

type NullableUpdateInfo struct {
	value *UpdateInfo
	isSet bool
}

func (v NullableUpdateInfo) Get() *UpdateInfo {
	return v.value
}

func (v *NullableUpdateInfo) Set(val *UpdateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInfo(val *UpdateInfo) *NullableUpdateInfo {
	return &NullableUpdateInfo{value: val, isSet: true}
}

func (v NullableUpdateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
