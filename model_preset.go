/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the Preset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Preset{}

// Preset プリセット情報
type Preset struct {
	Id                int32   `json:"id"`
	Name              string  `json:"name"`
	SpeakerUuid       string  `json:"speaker_uuid"`
	StyleId           int32   `json:"style_id"`
	SpeedScale        float32 `json:"speedScale"`
	PitchScale        float32 `json:"pitchScale"`
	IntonationScale   float32 `json:"intonationScale"`
	VolumeScale       float32 `json:"volumeScale"`
	PrePhonemeLength  float32 `json:"prePhonemeLength"`
	PostPhonemeLength float32 `json:"postPhonemeLength"`
}

// NewPreset instantiates a new Preset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreset(id int32, name string, speakerUuid string, styleId int32, speedScale float32, pitchScale float32, intonationScale float32, volumeScale float32, prePhonemeLength float32, postPhonemeLength float32) *Preset {
	this := Preset{}
	this.Id = id
	this.Name = name
	this.SpeakerUuid = speakerUuid
	this.StyleId = styleId
	this.SpeedScale = speedScale
	this.PitchScale = pitchScale
	this.IntonationScale = intonationScale
	this.VolumeScale = volumeScale
	this.PrePhonemeLength = prePhonemeLength
	this.PostPhonemeLength = postPhonemeLength
	return &this
}

// NewPresetWithDefaults instantiates a new Preset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresetWithDefaults() *Preset {
	this := Preset{}
	return &this
}

// GetId returns the Id field value
func (o *Preset) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Preset) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Preset) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Preset) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Preset) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Preset) SetName(v string) {
	o.Name = v
}

// GetSpeakerUuid returns the SpeakerUuid field value
func (o *Preset) GetSpeakerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpeakerUuid
}

// GetSpeakerUuidOk returns a tuple with the SpeakerUuid field value
// and a boolean to check if the value has been set.
func (o *Preset) GetSpeakerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpeakerUuid, true
}

// SetSpeakerUuid sets field value
func (o *Preset) SetSpeakerUuid(v string) {
	o.SpeakerUuid = v
}

// GetStyleId returns the StyleId field value
func (o *Preset) GetStyleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StyleId
}

// GetStyleIdOk returns a tuple with the StyleId field value
// and a boolean to check if the value has been set.
func (o *Preset) GetStyleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StyleId, true
}

// SetStyleId sets field value
func (o *Preset) SetStyleId(v int32) {
	o.StyleId = v
}

// GetSpeedScale returns the SpeedScale field value
func (o *Preset) GetSpeedScale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SpeedScale
}

// GetSpeedScaleOk returns a tuple with the SpeedScale field value
// and a boolean to check if the value has been set.
func (o *Preset) GetSpeedScaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpeedScale, true
}

// SetSpeedScale sets field value
func (o *Preset) SetSpeedScale(v float32) {
	o.SpeedScale = v
}

// GetPitchScale returns the PitchScale field value
func (o *Preset) GetPitchScale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PitchScale
}

// GetPitchScaleOk returns a tuple with the PitchScale field value
// and a boolean to check if the value has been set.
func (o *Preset) GetPitchScaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PitchScale, true
}

// SetPitchScale sets field value
func (o *Preset) SetPitchScale(v float32) {
	o.PitchScale = v
}

// GetIntonationScale returns the IntonationScale field value
func (o *Preset) GetIntonationScale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IntonationScale
}

// GetIntonationScaleOk returns a tuple with the IntonationScale field value
// and a boolean to check if the value has been set.
func (o *Preset) GetIntonationScaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntonationScale, true
}

// SetIntonationScale sets field value
func (o *Preset) SetIntonationScale(v float32) {
	o.IntonationScale = v
}

// GetVolumeScale returns the VolumeScale field value
func (o *Preset) GetVolumeScale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.VolumeScale
}

// GetVolumeScaleOk returns a tuple with the VolumeScale field value
// and a boolean to check if the value has been set.
func (o *Preset) GetVolumeScaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeScale, true
}

// SetVolumeScale sets field value
func (o *Preset) SetVolumeScale(v float32) {
	o.VolumeScale = v
}

// GetPrePhonemeLength returns the PrePhonemeLength field value
func (o *Preset) GetPrePhonemeLength() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PrePhonemeLength
}

// GetPrePhonemeLengthOk returns a tuple with the PrePhonemeLength field value
// and a boolean to check if the value has been set.
func (o *Preset) GetPrePhonemeLengthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrePhonemeLength, true
}

// SetPrePhonemeLength sets field value
func (o *Preset) SetPrePhonemeLength(v float32) {
	o.PrePhonemeLength = v
}

// GetPostPhonemeLength returns the PostPhonemeLength field value
func (o *Preset) GetPostPhonemeLength() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PostPhonemeLength
}

// GetPostPhonemeLengthOk returns a tuple with the PostPhonemeLength field value
// and a boolean to check if the value has been set.
func (o *Preset) GetPostPhonemeLengthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostPhonemeLength, true
}

// SetPostPhonemeLength sets field value
func (o *Preset) SetPostPhonemeLength(v float32) {
	o.PostPhonemeLength = v
}

func (o Preset) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Preset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["speaker_uuid"] = o.SpeakerUuid
	toSerialize["style_id"] = o.StyleId
	toSerialize["speedScale"] = o.SpeedScale
	toSerialize["pitchScale"] = o.PitchScale
	toSerialize["intonationScale"] = o.IntonationScale
	toSerialize["volumeScale"] = o.VolumeScale
	toSerialize["prePhonemeLength"] = o.PrePhonemeLength
	toSerialize["postPhonemeLength"] = o.PostPhonemeLength
	return toSerialize, nil
}

type NullablePreset struct {
	value *Preset
	isSet bool
}

func (v NullablePreset) Get() *Preset {
	return v.value
}

func (v *NullablePreset) Set(val *Preset) {
	v.value = val
	v.isSet = true
}

func (v NullablePreset) IsSet() bool {
	return v.isSet
}

func (v *NullablePreset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreset(val *Preset) *NullablePreset {
	return &NullablePreset{value: val, isSet: true}
}

func (v NullablePreset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
