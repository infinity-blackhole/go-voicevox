/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the EngineManifest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EngineManifest{}

// EngineManifest エンジン自体に関する情報
type EngineManifest struct {
	ManifestVersion     string            `json:"manifest_version"`
	Name                string            `json:"name"`
	BrandName           string            `json:"brand_name"`
	Uuid                string            `json:"uuid"`
	Url                 string            `json:"url"`
	Icon                string            `json:"icon"`
	DefaultSamplingRate int32             `json:"default_sampling_rate"`
	TermsOfService      string            `json:"terms_of_service"`
	UpdateInfos         []UpdateInfo      `json:"update_infos"`
	DependencyLicenses  []LicenseInfo     `json:"dependency_licenses"`
	SupportedFeatures   SupportedFeatures `json:"supported_features"`
}

// NewEngineManifest instantiates a new EngineManifest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineManifest(manifestVersion string, name string, brandName string, uuid string, url string, icon string, defaultSamplingRate int32, termsOfService string, updateInfos []UpdateInfo, dependencyLicenses []LicenseInfo, supportedFeatures SupportedFeatures) *EngineManifest {
	this := EngineManifest{}
	this.ManifestVersion = manifestVersion
	this.Name = name
	this.BrandName = brandName
	this.Uuid = uuid
	this.Url = url
	this.Icon = icon
	this.DefaultSamplingRate = defaultSamplingRate
	this.TermsOfService = termsOfService
	this.UpdateInfos = updateInfos
	this.DependencyLicenses = dependencyLicenses
	this.SupportedFeatures = supportedFeatures
	return &this
}

// NewEngineManifestWithDefaults instantiates a new EngineManifest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineManifestWithDefaults() *EngineManifest {
	this := EngineManifest{}
	return &this
}

// GetManifestVersion returns the ManifestVersion field value
func (o *EngineManifest) GetManifestVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManifestVersion
}

// GetManifestVersionOk returns a tuple with the ManifestVersion field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetManifestVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManifestVersion, true
}

// SetManifestVersion sets field value
func (o *EngineManifest) SetManifestVersion(v string) {
	o.ManifestVersion = v
}

// GetName returns the Name field value
func (o *EngineManifest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EngineManifest) SetName(v string) {
	o.Name = v
}

// GetBrandName returns the BrandName field value
func (o *EngineManifest) GetBrandName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrandName
}

// GetBrandNameOk returns a tuple with the BrandName field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetBrandNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrandName, true
}

// SetBrandName sets field value
func (o *EngineManifest) SetBrandName(v string) {
	o.BrandName = v
}

// GetUuid returns the Uuid field value
func (o *EngineManifest) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *EngineManifest) SetUuid(v string) {
	o.Uuid = v
}

// GetUrl returns the Url field value
func (o *EngineManifest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *EngineManifest) SetUrl(v string) {
	o.Url = v
}

// GetIcon returns the Icon field value
func (o *EngineManifest) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *EngineManifest) SetIcon(v string) {
	o.Icon = v
}

// GetDefaultSamplingRate returns the DefaultSamplingRate field value
func (o *EngineManifest) GetDefaultSamplingRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DefaultSamplingRate
}

// GetDefaultSamplingRateOk returns a tuple with the DefaultSamplingRate field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetDefaultSamplingRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultSamplingRate, true
}

// SetDefaultSamplingRate sets field value
func (o *EngineManifest) SetDefaultSamplingRate(v int32) {
	o.DefaultSamplingRate = v
}

// GetTermsOfService returns the TermsOfService field value
func (o *EngineManifest) GetTermsOfService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetTermsOfServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TermsOfService, true
}

// SetTermsOfService sets field value
func (o *EngineManifest) SetTermsOfService(v string) {
	o.TermsOfService = v
}

// GetUpdateInfos returns the UpdateInfos field value
func (o *EngineManifest) GetUpdateInfos() []UpdateInfo {
	if o == nil {
		var ret []UpdateInfo
		return ret
	}

	return o.UpdateInfos
}

// GetUpdateInfosOk returns a tuple with the UpdateInfos field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetUpdateInfosOk() ([]UpdateInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdateInfos, true
}

// SetUpdateInfos sets field value
func (o *EngineManifest) SetUpdateInfos(v []UpdateInfo) {
	o.UpdateInfos = v
}

// GetDependencyLicenses returns the DependencyLicenses field value
func (o *EngineManifest) GetDependencyLicenses() []LicenseInfo {
	if o == nil {
		var ret []LicenseInfo
		return ret
	}

	return o.DependencyLicenses
}

// GetDependencyLicensesOk returns a tuple with the DependencyLicenses field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetDependencyLicensesOk() ([]LicenseInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.DependencyLicenses, true
}

// SetDependencyLicenses sets field value
func (o *EngineManifest) SetDependencyLicenses(v []LicenseInfo) {
	o.DependencyLicenses = v
}

// GetSupportedFeatures returns the SupportedFeatures field value
func (o *EngineManifest) GetSupportedFeatures() SupportedFeatures {
	if o == nil {
		var ret SupportedFeatures
		return ret
	}

	return o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value
// and a boolean to check if the value has been set.
func (o *EngineManifest) GetSupportedFeaturesOk() (*SupportedFeatures, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportedFeatures, true
}

// SetSupportedFeatures sets field value
func (o *EngineManifest) SetSupportedFeatures(v SupportedFeatures) {
	o.SupportedFeatures = v
}

func (o EngineManifest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EngineManifest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["manifest_version"] = o.ManifestVersion
	toSerialize["name"] = o.Name
	toSerialize["brand_name"] = o.BrandName
	toSerialize["uuid"] = o.Uuid
	toSerialize["url"] = o.Url
	toSerialize["icon"] = o.Icon
	toSerialize["default_sampling_rate"] = o.DefaultSamplingRate
	toSerialize["terms_of_service"] = o.TermsOfService
	toSerialize["update_infos"] = o.UpdateInfos
	toSerialize["dependency_licenses"] = o.DependencyLicenses
	toSerialize["supported_features"] = o.SupportedFeatures
	return toSerialize, nil
}

type NullableEngineManifest struct {
	value *EngineManifest
	isSet bool
}

func (v NullableEngineManifest) Get() *EngineManifest {
	return v.value
}

func (v *NullableEngineManifest) Set(val *EngineManifest) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineManifest) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineManifest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineManifest(val *EngineManifest) *NullableEngineManifest {
	return &NullableEngineManifest{value: val, isSet: true}
}

func (v NullableEngineManifest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineManifest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
