/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the ParseKanaBadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParseKanaBadRequest{}

// ParseKanaBadRequest struct for ParseKanaBadRequest
type ParseKanaBadRequest struct {
	Text string `json:"text"`
	// |name|description| |---|---| | UNKNOWN_TEXT | 判別できない読み仮名があります: {text} | | ACCENT_TOP | 句頭にアクセントは置けません: {text} | | ACCENT_TWICE | 1つのアクセント句に二つ以上のアクセントは置けません: {text} | | ACCENT_NOTFOUND | アクセントを指定していないアクセント句があります: {text} | | EMPTY_PHRASE | {position}番目のアクセント句が空白です | | INTERROGATION_MARK_NOT_AT_END | アクセント句末以外に「？」は置けません: {text} | | INFINITE_LOOP | 処理時に無限ループになってしまいました...バグ報告をお願いします。 |
	ErrorName string            `json:"error_name"`
	ErrorArgs map[string]string `json:"error_args"`
}

// NewParseKanaBadRequest instantiates a new ParseKanaBadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParseKanaBadRequest(text string, errorName string, errorArgs map[string]string) *ParseKanaBadRequest {
	this := ParseKanaBadRequest{}
	this.Text = text
	this.ErrorName = errorName
	this.ErrorArgs = errorArgs
	return &this
}

// NewParseKanaBadRequestWithDefaults instantiates a new ParseKanaBadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParseKanaBadRequestWithDefaults() *ParseKanaBadRequest {
	this := ParseKanaBadRequest{}
	return &this
}

// GetText returns the Text field value
func (o *ParseKanaBadRequest) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *ParseKanaBadRequest) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *ParseKanaBadRequest) SetText(v string) {
	o.Text = v
}

// GetErrorName returns the ErrorName field value
func (o *ParseKanaBadRequest) GetErrorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorName
}

// GetErrorNameOk returns a tuple with the ErrorName field value
// and a boolean to check if the value has been set.
func (o *ParseKanaBadRequest) GetErrorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorName, true
}

// SetErrorName sets field value
func (o *ParseKanaBadRequest) SetErrorName(v string) {
	o.ErrorName = v
}

// GetErrorArgs returns the ErrorArgs field value
func (o *ParseKanaBadRequest) GetErrorArgs() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.ErrorArgs
}

// GetErrorArgsOk returns a tuple with the ErrorArgs field value
// and a boolean to check if the value has been set.
func (o *ParseKanaBadRequest) GetErrorArgsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorArgs, true
}

// SetErrorArgs sets field value
func (o *ParseKanaBadRequest) SetErrorArgs(v map[string]string) {
	o.ErrorArgs = v
}

func (o ParseKanaBadRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParseKanaBadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	toSerialize["error_name"] = o.ErrorName
	toSerialize["error_args"] = o.ErrorArgs
	return toSerialize, nil
}

type NullableParseKanaBadRequest struct {
	value *ParseKanaBadRequest
	isSet bool
}

func (v NullableParseKanaBadRequest) Get() *ParseKanaBadRequest {
	return v.value
}

func (v *NullableParseKanaBadRequest) Set(val *ParseKanaBadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableParseKanaBadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableParseKanaBadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParseKanaBadRequest(val *ParseKanaBadRequest) *NullableParseKanaBadRequest {
	return &NullableParseKanaBadRequest{value: val, isSet: true}
}

func (v NullableParseKanaBadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParseKanaBadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
