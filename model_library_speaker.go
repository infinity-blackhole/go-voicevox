/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the LibrarySpeaker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibrarySpeaker{}

// LibrarySpeaker 音声ライブラリに含まれる話者の情報
type LibrarySpeaker struct {
	Speaker     Speaker     `json:"speaker"`
	SpeakerInfo SpeakerInfo `json:"speaker_info"`
}

// NewLibrarySpeaker instantiates a new LibrarySpeaker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibrarySpeaker(speaker Speaker, speakerInfo SpeakerInfo) *LibrarySpeaker {
	this := LibrarySpeaker{}
	this.Speaker = speaker
	this.SpeakerInfo = speakerInfo
	return &this
}

// NewLibrarySpeakerWithDefaults instantiates a new LibrarySpeaker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibrarySpeakerWithDefaults() *LibrarySpeaker {
	this := LibrarySpeaker{}
	return &this
}

// GetSpeaker returns the Speaker field value
func (o *LibrarySpeaker) GetSpeaker() Speaker {
	if o == nil {
		var ret Speaker
		return ret
	}

	return o.Speaker
}

// GetSpeakerOk returns a tuple with the Speaker field value
// and a boolean to check if the value has been set.
func (o *LibrarySpeaker) GetSpeakerOk() (*Speaker, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Speaker, true
}

// SetSpeaker sets field value
func (o *LibrarySpeaker) SetSpeaker(v Speaker) {
	o.Speaker = v
}

// GetSpeakerInfo returns the SpeakerInfo field value
func (o *LibrarySpeaker) GetSpeakerInfo() SpeakerInfo {
	if o == nil {
		var ret SpeakerInfo
		return ret
	}

	return o.SpeakerInfo
}

// GetSpeakerInfoOk returns a tuple with the SpeakerInfo field value
// and a boolean to check if the value has been set.
func (o *LibrarySpeaker) GetSpeakerInfoOk() (*SpeakerInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpeakerInfo, true
}

// SetSpeakerInfo sets field value
func (o *LibrarySpeaker) SetSpeakerInfo(v SpeakerInfo) {
	o.SpeakerInfo = v
}

func (o LibrarySpeaker) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibrarySpeaker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["speaker"] = o.Speaker
	toSerialize["speaker_info"] = o.SpeakerInfo
	return toSerialize, nil
}

type NullableLibrarySpeaker struct {
	value *LibrarySpeaker
	isSet bool
}

func (v NullableLibrarySpeaker) Get() *LibrarySpeaker {
	return v.value
}

func (v *NullableLibrarySpeaker) Set(val *LibrarySpeaker) {
	v.value = val
	v.isSet = true
}

func (v NullableLibrarySpeaker) IsSet() bool {
	return v.isSet
}

func (v *NullableLibrarySpeaker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibrarySpeaker(val *LibrarySpeaker) *NullableLibrarySpeaker {
	return &NullableLibrarySpeaker{value: val, isSet: true}
}

func (v NullableLibrarySpeaker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibrarySpeaker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
