/*
VOICEVOX Engine

VOICEVOXの音声合成エンジンです。

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voicevox

import (
	"encoding/json"
)

// checks if the UserDictWord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDictWord{}

// UserDictWord 辞書のコンパイルに使われる情報
type UserDictWord struct {
	Surface               string `json:"surface"`
	Priority              int32  `json:"priority"`
	ContextId             *int32 `json:"context_id,omitempty"`
	PartOfSpeech          string `json:"part_of_speech"`
	PartOfSpeechDetail1   string `json:"part_of_speech_detail_1"`
	PartOfSpeechDetail2   string `json:"part_of_speech_detail_2"`
	PartOfSpeechDetail3   string `json:"part_of_speech_detail_3"`
	InflectionalType      string `json:"inflectional_type"`
	InflectionalForm      string `json:"inflectional_form"`
	Stem                  string `json:"stem"`
	Yomi                  string `json:"yomi"`
	Pronunciation         string `json:"pronunciation"`
	AccentType            int32  `json:"accent_type"`
	MoraCount             *int32 `json:"mora_count,omitempty"`
	AccentAssociativeRule string `json:"accent_associative_rule"`
}

// NewUserDictWord instantiates a new UserDictWord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDictWord(surface string, priority int32, partOfSpeech string, partOfSpeechDetail1 string, partOfSpeechDetail2 string, partOfSpeechDetail3 string, inflectionalType string, inflectionalForm string, stem string, yomi string, pronunciation string, accentType int32, accentAssociativeRule string) *UserDictWord {
	this := UserDictWord{}
	this.Surface = surface
	this.Priority = priority
	var contextId int32 = 1348
	this.ContextId = &contextId
	this.PartOfSpeech = partOfSpeech
	this.PartOfSpeechDetail1 = partOfSpeechDetail1
	this.PartOfSpeechDetail2 = partOfSpeechDetail2
	this.PartOfSpeechDetail3 = partOfSpeechDetail3
	this.InflectionalType = inflectionalType
	this.InflectionalForm = inflectionalForm
	this.Stem = stem
	this.Yomi = yomi
	this.Pronunciation = pronunciation
	this.AccentType = accentType
	this.AccentAssociativeRule = accentAssociativeRule
	return &this
}

// NewUserDictWordWithDefaults instantiates a new UserDictWord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDictWordWithDefaults() *UserDictWord {
	this := UserDictWord{}
	var contextId int32 = 1348
	this.ContextId = &contextId
	return &this
}

// GetSurface returns the Surface field value
func (o *UserDictWord) GetSurface() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Surface
}

// GetSurfaceOk returns a tuple with the Surface field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetSurfaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Surface, true
}

// SetSurface sets field value
func (o *UserDictWord) SetSurface(v string) {
	o.Surface = v
}

// GetPriority returns the Priority field value
func (o *UserDictWord) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *UserDictWord) SetPriority(v int32) {
	o.Priority = v
}

// GetContextId returns the ContextId field value if set, zero value otherwise.
func (o *UserDictWord) GetContextId() int32 {
	if o == nil || IsNil(o.ContextId) {
		var ret int32
		return ret
	}
	return *o.ContextId
}

// GetContextIdOk returns a tuple with the ContextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetContextIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContextId) {
		return nil, false
	}
	return o.ContextId, true
}

// HasContextId returns a boolean if a field has been set.
func (o *UserDictWord) HasContextId() bool {
	if o != nil && !IsNil(o.ContextId) {
		return true
	}

	return false
}

// SetContextId gets a reference to the given int32 and assigns it to the ContextId field.
func (o *UserDictWord) SetContextId(v int32) {
	o.ContextId = &v
}

// GetPartOfSpeech returns the PartOfSpeech field value
func (o *UserDictWord) GetPartOfSpeech() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartOfSpeech
}

// GetPartOfSpeechOk returns a tuple with the PartOfSpeech field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPartOfSpeechOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartOfSpeech, true
}

// SetPartOfSpeech sets field value
func (o *UserDictWord) SetPartOfSpeech(v string) {
	o.PartOfSpeech = v
}

// GetPartOfSpeechDetail1 returns the PartOfSpeechDetail1 field value
func (o *UserDictWord) GetPartOfSpeechDetail1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartOfSpeechDetail1
}

// GetPartOfSpeechDetail1Ok returns a tuple with the PartOfSpeechDetail1 field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPartOfSpeechDetail1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartOfSpeechDetail1, true
}

// SetPartOfSpeechDetail1 sets field value
func (o *UserDictWord) SetPartOfSpeechDetail1(v string) {
	o.PartOfSpeechDetail1 = v
}

// GetPartOfSpeechDetail2 returns the PartOfSpeechDetail2 field value
func (o *UserDictWord) GetPartOfSpeechDetail2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartOfSpeechDetail2
}

// GetPartOfSpeechDetail2Ok returns a tuple with the PartOfSpeechDetail2 field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPartOfSpeechDetail2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartOfSpeechDetail2, true
}

// SetPartOfSpeechDetail2 sets field value
func (o *UserDictWord) SetPartOfSpeechDetail2(v string) {
	o.PartOfSpeechDetail2 = v
}

// GetPartOfSpeechDetail3 returns the PartOfSpeechDetail3 field value
func (o *UserDictWord) GetPartOfSpeechDetail3() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartOfSpeechDetail3
}

// GetPartOfSpeechDetail3Ok returns a tuple with the PartOfSpeechDetail3 field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPartOfSpeechDetail3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartOfSpeechDetail3, true
}

// SetPartOfSpeechDetail3 sets field value
func (o *UserDictWord) SetPartOfSpeechDetail3(v string) {
	o.PartOfSpeechDetail3 = v
}

// GetInflectionalType returns the InflectionalType field value
func (o *UserDictWord) GetInflectionalType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InflectionalType
}

// GetInflectionalTypeOk returns a tuple with the InflectionalType field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetInflectionalTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InflectionalType, true
}

// SetInflectionalType sets field value
func (o *UserDictWord) SetInflectionalType(v string) {
	o.InflectionalType = v
}

// GetInflectionalForm returns the InflectionalForm field value
func (o *UserDictWord) GetInflectionalForm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InflectionalForm
}

// GetInflectionalFormOk returns a tuple with the InflectionalForm field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetInflectionalFormOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InflectionalForm, true
}

// SetInflectionalForm sets field value
func (o *UserDictWord) SetInflectionalForm(v string) {
	o.InflectionalForm = v
}

// GetStem returns the Stem field value
func (o *UserDictWord) GetStem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stem
}

// GetStemOk returns a tuple with the Stem field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetStemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stem, true
}

// SetStem sets field value
func (o *UserDictWord) SetStem(v string) {
	o.Stem = v
}

// GetYomi returns the Yomi field value
func (o *UserDictWord) GetYomi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Yomi
}

// GetYomiOk returns a tuple with the Yomi field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetYomiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yomi, true
}

// SetYomi sets field value
func (o *UserDictWord) SetYomi(v string) {
	o.Yomi = v
}

// GetPronunciation returns the Pronunciation field value
func (o *UserDictWord) GetPronunciation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pronunciation
}

// GetPronunciationOk returns a tuple with the Pronunciation field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetPronunciationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pronunciation, true
}

// SetPronunciation sets field value
func (o *UserDictWord) SetPronunciation(v string) {
	o.Pronunciation = v
}

// GetAccentType returns the AccentType field value
func (o *UserDictWord) GetAccentType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccentType
}

// GetAccentTypeOk returns a tuple with the AccentType field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetAccentTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccentType, true
}

// SetAccentType sets field value
func (o *UserDictWord) SetAccentType(v int32) {
	o.AccentType = v
}

// GetMoraCount returns the MoraCount field value if set, zero value otherwise.
func (o *UserDictWord) GetMoraCount() int32 {
	if o == nil || IsNil(o.MoraCount) {
		var ret int32
		return ret
	}
	return *o.MoraCount
}

// GetMoraCountOk returns a tuple with the MoraCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetMoraCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MoraCount) {
		return nil, false
	}
	return o.MoraCount, true
}

// HasMoraCount returns a boolean if a field has been set.
func (o *UserDictWord) HasMoraCount() bool {
	if o != nil && !IsNil(o.MoraCount) {
		return true
	}

	return false
}

// SetMoraCount gets a reference to the given int32 and assigns it to the MoraCount field.
func (o *UserDictWord) SetMoraCount(v int32) {
	o.MoraCount = &v
}

// GetAccentAssociativeRule returns the AccentAssociativeRule field value
func (o *UserDictWord) GetAccentAssociativeRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccentAssociativeRule
}

// GetAccentAssociativeRuleOk returns a tuple with the AccentAssociativeRule field value
// and a boolean to check if the value has been set.
func (o *UserDictWord) GetAccentAssociativeRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccentAssociativeRule, true
}

// SetAccentAssociativeRule sets field value
func (o *UserDictWord) SetAccentAssociativeRule(v string) {
	o.AccentAssociativeRule = v
}

func (o UserDictWord) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDictWord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["surface"] = o.Surface
	toSerialize["priority"] = o.Priority
	if !IsNil(o.ContextId) {
		toSerialize["context_id"] = o.ContextId
	}
	toSerialize["part_of_speech"] = o.PartOfSpeech
	toSerialize["part_of_speech_detail_1"] = o.PartOfSpeechDetail1
	toSerialize["part_of_speech_detail_2"] = o.PartOfSpeechDetail2
	toSerialize["part_of_speech_detail_3"] = o.PartOfSpeechDetail3
	toSerialize["inflectional_type"] = o.InflectionalType
	toSerialize["inflectional_form"] = o.InflectionalForm
	toSerialize["stem"] = o.Stem
	toSerialize["yomi"] = o.Yomi
	toSerialize["pronunciation"] = o.Pronunciation
	toSerialize["accent_type"] = o.AccentType
	if !IsNil(o.MoraCount) {
		toSerialize["mora_count"] = o.MoraCount
	}
	toSerialize["accent_associative_rule"] = o.AccentAssociativeRule
	return toSerialize, nil
}

type NullableUserDictWord struct {
	value *UserDictWord
	isSet bool
}

func (v NullableUserDictWord) Get() *UserDictWord {
	return v.value
}

func (v *NullableUserDictWord) Set(val *UserDictWord) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDictWord) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDictWord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDictWord(val *UserDictWord) *NullableUserDictWord {
	return &NullableUserDictWord{value: val, isSet: true}
}

func (v NullableUserDictWord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDictWord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
